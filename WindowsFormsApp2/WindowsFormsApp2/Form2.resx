<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>